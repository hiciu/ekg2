*** ekg -> plugin ***

protocol-validate-uid(char *uid, int valid)
	sprawdza, czy podany protokół jest obsługiwany. każdy obsługujący
	plugin powinien zwiększyć `valid' o 1.

protocol-ignore(char *session, char *uid, int prevlevel, int newlevel)
	zmieniono poziom ignorowania osoby z `prevlevel' do `newlevel'.

userlist-changed(char *session, *uid)
	zmienił się wpis w liście kontaktów.

userlist-removed(char *uid)
	usunięto wpis z listy kontaktów.

userlist-added(char *uid)
	dodano wpis do listy kontaktów.

userlist-renamed(char *prevnick, char *newnick)
	zmieniono pseudonim danej osoby.

qutting(char *reason)
	wpisano /quit.

ui-window-target-changed(window_t *w)
	zmieniono nazwę okna.

plugin-print-version()
	prośba o wyświetlenie wersji pluginów.

config-write(FILE *f)
	zapisywanie konfiguracji.

*** plugin -> ekg ***

protocol-connected(char *session)
	połączenie się udało.

protocol-failed(char *session, char *reason)
	połączenie się nie udało.

protocol-disconnected(char *session, char *reason)
	wywoływany przy rozłączeniu sesji przez serwer.

protocol-status(char *session, char *uid, char *status, char *descr, char *host, int port, time_t when)
	dana osoba zmieniła swój stan.

protocol-message(char *session, char *sender, char **recipients, char *text, uint32_t *format, time_t sent, int class, char *seq, int secure)
	otrzymano wiadomość od danej osoby.

protocol-message-ack(char *session, char *recipient, char *seq, char *status)
	potwierdzenie nadania wiadomości.

protocol-message-post(char *session, char *sender, char **recipients, char *text, uint32_t *format, time_t sent, int class, char *seq, int secure)
	prawie jak protocol-message, tyle, że po deszyfracji
